@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

    <div class="d-flex align-items-center justify-content-center" style="height: 500px">
        <div align="center">
            <button id="locationButton" type="button" class="btn btn-default" data-toggle="collapse" data-target="#collapsePlayBtn" onclick="getLocation()">Please click here to consent to this page using your location data</button>
        </div>

        @*<div class="row" align="center">
            <div id="collapsePlayBtn" class="collapse">
                <form method="post">
                    <input type="hidden" asp-for="Location.Longitude" id="longitude" />
                    <input type="hidden" asp-for="Location.Latitude" id="latitude" />
                    <button type="submit" id="play">Play</button>
                </form>
            </div>
        </div>*@
    </div>
    <div class="d-flex align-items-center justify-content-center" @*style="height: 550px"*@>
        <div align="center">
            <div id="collapsePlayBtn" class="collapse">
                <form method="post">
                    <input type="hidden" asp-for="Location.Longitude" id="longitude" />
                    <input type="hidden" asp-for="Location.Latitude" id="latitude" />
                    <button type="submit" id="play">Play</button>
                </form>
            </div>
        </div>
    </div>
    

    <script>
        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition);
            } else {
                x.innerHTML = "Geolocation is not supported by this browser.";
            }
        }

        function showPosition(position) {
            document.getElementById("longitude").value = position.coords.longitude;
            document.getElementById("latitude").value = position.coords.latitude;
        }


    </script>
